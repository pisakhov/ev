

               <div id="calculator" class="fixed w-full w-full h-full md:block hidden p-4 rounded-md"></div>


         <script >
             var elt = document.getElementById('calculator');
             var calculator = Desmos.GraphingCalculator(elt);

             calculator.setMathBounds({
				left: -20,
				right: 200,
				bottom: -40,
				top: 100
			});

                        calculator.setGraphSettings({
            // backgroundColor: '#232323',
            xAxisLabel: 'Q       ',
            yAxisLabel: 'P',
            xAxisStep: 10,
            yAxisStep: 10,
            xAxisArrows: true,
            yAxisArrows: true,
            xAxisNumbers: false,
            yAxisNumbers: false,
            xAxisMinorSubdivisions: 1,
            yAxisMinorSubdivisions: 1,
            lockViewport: true,
            expressions: false,
            showGrid: false,
            keypad: false,
				zoomFit: false,
				settingsMenu: false,
            fontSize: 10
            });

       
          calculator.setExpression({id: 'demand', latex: 'D(x) = b - 1/2*x', color: 'rgb(124, 58, 237)'});
          calculator.setExpression({id: 'supply', latex: 'S(x) = x-a', color: 'color: rgb(13, 148, 136);'});
          calculator.setExpression({id: 'eq', latex: 'S(q)~D(q)', color: 'color: rgb(13, 148, 136);'});
          calculator.setExpression({id: 'eq2', latex: 'p=S(q)', color: 'color: rgb(13, 148, 136);'});
          calculator.setExpression({id: 'labelq', latex: '(q,p)',label:'',showLabel:true, color: 'color: rgb(13, 148, 136);'});


       
             var updateVariable = function (evt) {
               calculator.setExpression({id:'1', latex:'a='+(evt.pageX/10)});
               calculator.setExpression({id:'2', latex:'b='+(evt.pageY/10)});
             };
       
             // Register the callback as a listener on mousemove, and use it to
             // update the values of a and b.
             document.addEventListener('mousemove', updateVariable, true);
         </script>